<?xml version="1.0" encoding="UTF-8"?>
<!-- Licensed to Elasticsearch under one or more contributor
license agreements. See the NOTICE file distributed with this work for additional
information regarding copyright ownership. Elasticsearch licenses this file to you
under the Apache License, Version 2.0 (the "License"); you may not use this
file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by
applicable law or agreed to in writing, software distributed under the License
is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License. -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.elasticsearch.plugin</groupId>
        <artifactId>plugins</artifactId>
        <version>2.4.5</version>
    </parent>

    <artifactId>cloud-gce</artifactId>
    <name>Plugin: Cloud: Google Compute Engine</name>
    <description>The Google Compute Engine (GCE) Cloud plugin allows to use GCE API for the unicast discovery mechanism.</description>

    <properties>
        <elasticsearch.plugin.classname>org.elasticsearch.plugin.cloud.gce.CloudGcePlugin</elasticsearch.plugin.classname>
        <google.gce.version>v1-rev144-1.21.0</google.gce.version>
        <google.gcs.version>1.0.0</google.gcs.version>       
        <!-- currently has no unit tests -->
        <tests.rest.suite>cloud_gce</tests.rest.suite>
        <tests.rest.load_packaged>false</tests.rest.load_packaged>
        <ssl.antfile>${project.basedir}/ssl-setup.xml</ssl.antfile>
        <keystore>${project.build.testOutputDirectory}/test-node.jks</keystore>
    </properties>

    <dependencies>
        <!-- Google APIs -->
        <dependency>
          <groupId>com.google.apis</groupId>
          <artifactId>google-api-services-compute</artifactId>
          <version>${google.gce.version}</version>
          <exclusions>
              <exclusion>
                 <groupId>com.google.guava</groupId>
                 <artifactId>guava-jdk5</artifactId>
              </exclusion>
          </exclusions>
        </dependency>
         <dependency>
		    <groupId>com.google.cloud</groupId>
		    <artifactId>google-cloud-storage</artifactId>
		    <version>${google.gcs.version}</version>
		</dependency>		
        <!-- We need to force here the compile scope as it was defined as test scope in plugins/pom.xml -->
        <!-- TODO: remove this dependency when we will have a REST Test module -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <scope>compile</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
        	<plugin>
                <groupId>de.thetaphi</groupId>
                <artifactId>forbiddenapis</artifactId>
                <executions>
                    <execution>
                        <id>check-forbidden-apis</id>
                        <phase>none</phase>
                    </execution>
                    <execution>
                        <id>check-forbidden-test-apis</id>
                        <phase>none</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>check-license-headers</id>
                        <phase>none</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>check-invalid-patterns</id>
                        <phase>none</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <!-- Don't run the license checker in core -->
                        <id>check-license</id>
                        <phase>none</phase>
                    </execution>
                    <execution>
                        <id>set-doclint-all</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <!-- if we are on java 1.8.* we set doclint to run all checks -->
                                <condition property="doclint.all" value="-Xdoclint:all" else="" >
                                    <matches pattern="1\.8\..+$" string="${java.runtime.version}" />
                                </condition>
                            </target>
                            <exportAntProperties>true</exportAntProperties>
                        </configuration>
                    </execution>
                    <execution>
                        <id>set-doclint-missing</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <!-- if we are on java 1.8.* we set doclint to ignore missing-->
                                <condition property="doclint.missing" value="-Xdoclint:-missing" else="" >
                                    <matches pattern="1\.8\..+$" string="${java.runtime.version}" />
                                </condition>
                            </target>
                            <exportAntProperties>true</exportAntProperties>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--plugin>
			  <groupId>org.apache.maven.plugins</groupId>
			  <artifactId>maven-enforcer-plugin</artifactId>
			  <version>3.0.0-M2</version>
			  <executions>
			    <execution>
			      <id>enforce</id>
			      <configuration>
			        <rules>
			<dependencyConvergence/>
			        </rules>
			      </configuration>
			      <goals>
			        <goal>enforce</goal>
			      </goals>
			    </execution>
			  </executions>
			</plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
            </plugin>
            <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
            <!-- generate certificates/keys -->
                <execution>
                    <id>certificate-setup</id>
                    <phase>generate-test-resources</phase>
                    <goals>
                        <goal>run</goal>
                    </goals>
                    <configuration>
                        <target>
                            <delete file="${keystore}" quiet="true"/> <!-- must clean it up first -->
                            <mkdir dir="${project.build.testOutputDirectory}"/> <!-- the directory must exist first -->
                            <exec executable="keytool" failonerror="true">
                                <arg line="-genkey -keyalg RSA -alias selfsigned -keystore ${keystore} -storepass keypass -keypass keypass -validity 712 -keysize 2048 -dname CN=127.0.0.1"/>
                            </exec>
                        </target>
                        <skip>${skip.unit.tests}</skip> <!-- the GceDiscoverTests run as a unittest but are really integ tests that's why we skip this task if unittests don't run -->
                    </configuration>
                </execution>
            </executions>
            </plugin>
        </plugins>
    </build>

</project>
